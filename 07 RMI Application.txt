RMI Application

one.java

import java.rmi.*;

interface one extends Remote {

public int palin(String a) throws RemoteException;

two.java
import java.rmi.*;
import java.lang.*;

import java.rmi.server.*;

public class two extends UnicastRemoteObject implements one {

public two() throws RemoteException { }

public int palin(String a) throws RemoteException {
System.out.printin("Hello");
StringBuffer str = new StringBuffer(a);
String str1 = str.toString();
System.out.printin("Print :" + str1.toString());
StringBuffer str2 = str.reverse();
System.out.printin("Print :" + str2.toString());
int b = str1.compareTo(str2.toString());

System.out.printin("Print : "+ b);

if (b == 0)
return 1;
else
return 0;

rmiserver.java
import java.io.*;
import java.rmi.*;

import java.net.*;

public class rmiserver {

public static void main(String args[]) throws Exception {

try {
two twox = new two{);
Naming.bind("palin", twox);
System.out.printIn("Object registered");
}

catch(Exception e) {

System.out.printIn("Exception" + e);

rmiclient.java
import java.io.*;
import java.rmi.*;

import java.net.*;

public class rmiclient {
public static void main(String args[]) throws Exception {
try {
String s1 = "rmi://localhost/palin";
one onex = (one)Naming.lookup(s1);
int m = onex.palin("madam");
System.out.printIn("Print : "+ m);
if (m == 1) {

System.out.printIn("The given string is a Palindrome");

else {

System.out.printIn("The given string is not a Palindrome");
}
catch (Exception e) {

System.out.printIn("Exception" + e);
